{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/song-sentiment-service/song-sentiment-frontend-redo/src/Body.js\";\nimport { render } from '@testing-library/react';\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport SongSearch from \"./body/SongSearch\";\nimport SongSentimentResult from \"./body/SongSentimentResult.js\";\nimport songSentimentService from './songSentimentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateSongTables = async () => {\n      var lowestSongsArray = await songSentimentService.getLowestSentimentSongs();\n      var highestSongsArray = await songSentimentService.getLowestSentimentSongs();\n      this.setState({\n        lowestSentimentSongsArray: lowestSongsArray\n      });\n      this.setState({\n        highestSentimentSongsArray: highestSongsArray\n      });\n    };\n\n    this.getSentimentValueForSong = async songObject => {\n      this.setState({\n        \"sentimentValue\": \"Calculating!\"\n      });\n      var sentimentValue = await songSentimentService.getSentimentValueForSong(songObject);\n      this.setState({\n        \"sentimentValue\": sentimentValue.toString()\n      });\n    };\n\n    this.state = {\n      \"sentimentValue\": \"No Song chosen yet!\",\n      \"lowestSentimentSongsArray\": [],\n      \"highestSentimentSongsArray\": []\n    };\n  }\n\n  render() {\n    this.updateSongTables();\n    var myBackGroundStyle = {\n      backgroundColor: \"lightblue\",\n      fontFamily: \"Arial\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      style: myBackGroundStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(SongSearch, {\n              getSentimentValueFunction: this.getSentimentValueForSong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(SongSentimentResult, {\n              sentimentValueProp: this.state.sentimentValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(LowestSentimentSongs, {\n              lowestSentimentSongs: this.state.lowestSentimentSongsArray\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(HighestSentimentSongs, {\n              highestSentimentSongs: this.state.highestSentimentSongsArray\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Body;","map":{"version":3,"names":["render","React","useState","useEffect","ReactDOM","SongSearch","SongSentimentResult","songSentimentService","Body","Component","constructor","props","updateSongTables","lowestSongsArray","getLowestSentimentSongs","highestSongsArray","setState","lowestSentimentSongsArray","highestSentimentSongsArray","getSentimentValueForSong","songObject","sentimentValue","toString","state","myBackGroundStyle","backgroundColor","fontFamily"],"sources":["/root/Desktop/song-sentiment-service/song-sentiment-frontend-redo/src/Body.js"],"sourcesContent":["import { render } from '@testing-library/react';\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport SongSearch from \"./body/SongSearch\";\nimport SongSentimentResult from \"./body/SongSentimentResult.js\";\n\nimport songSentimentService from './songSentimentService';\n\nclass Body extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      \"sentimentValue\": \"No Song chosen yet!\",\n      \"lowestSentimentSongsArray\":[],\n      \"highestSentimentSongsArray\":[]\n    }\n  }\n\n  updateSongTables = async () => {\n    var lowestSongsArray = await songSentimentService.getLowestSentimentSongs();\n    var highestSongsArray = await songSentimentService.getLowestSentimentSongs();\n    this.setState({lowestSentimentSongsArray: lowestSongsArray});\n    this.setState({highestSentimentSongsArray: highestSongsArray});\n  }\n\n  getSentimentValueForSong = async (songObject) => {\n    this.setState({\"sentimentValue\":\"Calculating!\"});\n    var sentimentValue = await songSentimentService.getSentimentValueForSong(songObject);\n    this.setState({\"sentimentValue\":sentimentValue.toString()});\n  }\n\n  render(){\n    this.updateSongTables();\n\n    var myBackGroundStyle = {\n      backgroundColor: \"lightblue\",\n      fontFamily: \"Arial\"\n    };\n\n    return (\n      <body style={myBackGroundStyle}> \n        <div className=\"container\" >\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <SongSearch getSentimentValueFunction={this.getSentimentValueForSong}/>\n            </div>\n            <div className=\"col-6\">\n              <SongSentimentResult sentimentValueProp={this.state.sentimentValue} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <LowestSentimentSongs lowestSentimentSongs={this.state.lowestSentimentSongsArray} />\n            </div>\n            <div className=\"col\">\n              <HighestSentimentSongs highestSentimentSongs={this.state.highestSentimentSongsArray}/>\n            </div>\n          </div>\n        </div>\n      </body>\n    );\n  }\n}\n\nexport default Body;"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAkC;EAEhCC,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;;IADgB,KASlBC,gBATkB,GASC,YAAY;MAC7B,IAAIC,gBAAgB,GAAG,MAAMN,oBAAoB,CAACO,uBAArB,EAA7B;MACA,IAAIC,iBAAiB,GAAG,MAAMR,oBAAoB,CAACO,uBAArB,EAA9B;MACA,KAAKE,QAAL,CAAc;QAACC,yBAAyB,EAAEJ;MAA5B,CAAd;MACA,KAAKG,QAAL,CAAc;QAACE,0BAA0B,EAAEH;MAA7B,CAAd;IACD,CAdiB;;IAAA,KAgBlBI,wBAhBkB,GAgBS,MAAOC,UAAP,IAAsB;MAC/C,KAAKJ,QAAL,CAAc;QAAC,kBAAiB;MAAlB,CAAd;MACA,IAAIK,cAAc,GAAG,MAAMd,oBAAoB,CAACY,wBAArB,CAA8CC,UAA9C,CAA3B;MACA,KAAKJ,QAAL,CAAc;QAAC,kBAAiBK,cAAc,CAACC,QAAf;MAAlB,CAAd;IACD,CApBiB;;IAEhB,KAAKC,KAAL,GAAa;MACX,kBAAkB,qBADP;MAEX,6BAA4B,EAFjB;MAGX,8BAA6B;IAHlB,CAAb;EAKD;;EAeDvB,MAAM,GAAE;IACN,KAAKY,gBAAL;IAEA,IAAIY,iBAAiB,GAAG;MACtBC,eAAe,EAAE,WADK;MAEtBC,UAAU,EAAE;IAFU,CAAxB;IAKA,oBACE;MAAM,KAAK,EAAEF,iBAAb;MAAA,uBACE;QAAK,SAAS,EAAC,WAAf;QAAA,wBACE;UAAK,SAAS,EAAC,KAAf;UAAA,wBACE;YAAK,SAAS,EAAC,OAAf;YAAA,uBACE,QAAC,UAAD;cAAY,yBAAyB,EAAE,KAAKL;YAA5C;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAK,SAAS,EAAC,OAAf;YAAA,uBACE,QAAC,mBAAD;cAAqB,kBAAkB,EAAE,KAAKI,KAAL,CAAWF;YAApD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eASE;UAAK,SAAS,EAAC,KAAf;UAAA,wBACE;YAAK,SAAS,EAAC,KAAf;YAAA,uBACE,QAAC,oBAAD;cAAsB,oBAAoB,EAAE,KAAKE,KAAL,CAAWN;YAAvD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAK,SAAS,EAAC,KAAf;YAAA,uBACE,QAAC,qBAAD;cAAuB,qBAAqB,EAAE,KAAKM,KAAL,CAAWL;YAAzD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAsBD;;AAtD+B;;AAyDlC,eAAeV,IAAf"},"metadata":{},"sourceType":"module"}